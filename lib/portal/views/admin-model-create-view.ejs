<%
var usedVariables = [];
function randomString(length)
{
	var result = '', chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
	for (var i = length; i > 0; --i)
	{
		result += chars[Math.round(Math.random() * (chars.length - 1))];
	}
	return result;
}

function getControlForField(field, controlId)
{
	var content = '', i, j;

	switch(Object.prototype.toString.call(field))
	{
		case '[object Object]':
			content += '<div>';
			for (i in field)
			{
				if (i === 'id' || i === '_id')
				{
					continue;
				}

				switch(Object.prototype.toString.call(field[i]))
				{
					case '[object Object]':
						content += getControlForField(field[i], controlId + '.' + i);
						break;

					case '[object Array]':
						content += '<div><button data-ng-click="push({id}, {obj})">Add</button><br />'
										.replace(/{id}/gi, controlId + '.' + i)
										.replace(/{obj}/gi, JSON.stringify(field[i][0]).replace(/\"/gi, "'"));
						content += getControlForField(field[i], controlId + '.' + i) + '</div>';
						break;

					default:
						content += '<input data-ng-model="{id}" type="text" placeholder="{id}"><br />'.replace(/{id}/gi, controlId + '.' + i);
						break;
				}
			}
			content += '</div>';
			break;

		case '[object Array]':
			var item = null;
			do
			{
				item = randomString(10);
			}
			while(item in usedVariables);

			content += '<div ng-repeat="{item} in {controlId}">'.replace(/{item}/gi, item).replace(/{controlId}/gi, controlId);
			content += getControlForField(field[0], item);
			content += '<button data-ng-click="pop({controlId}, $index)" data-ng-disabled="{controlId}.length < 2">Remove</button>'.replace(/{controlId}/gi, controlId);
			content += '</div>';
			break;

		default:
			break;
	}

	return content;
}
%>
<form>
  <div>
    <%-getControlForField(instance, model.name)%>
  </div>
  <br>
  <a href="#/<%=model.collection%>">Cancel</a>
  <button data-ng-click="create()">Save</button>
</form>